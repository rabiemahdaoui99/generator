{"version":3,"sources":["images/handSignals/0.png","images/handSignals/1.png","images/handSignals/2.png","images/handSignals/3.png","images/handSignals/4.png","images/handSignals/5.png","images/handSignals/6.png","images/handSignals/7.png","images/handSignals/8.png","images/handSignals/9.png","images/handSignals/10.png","images/handSignals/11.png","images/handSignals/12.png","images/handSignals/13.png","images/handSignals/14.png","images/handSignals/15.png","images/handSignals/16.png","images/rcl/at.png","images/rcl/rt.png","images/rcl/tm.png","generate_Exam/imagesImport.js","Components/ExamResult.js","Components/ExamQuestion.js","generate_Exam/examGenerator.js","Components/ExamPage.js","pages/HandSignal/HandSignal.js","pages/Rcl/Rcl.js","pages/Range/Range.js","pages/ConvertWeights/ConvertWeights.js","pages/PartOfLine/PartOfLine.js","Components/Navbar/Navbar.js","pages/BoomAngle/BoomAngle.js","pages/GrossCapacity/GrossCapacity.js","pages/LoadedBoomAngle/LoadedBoomAngle.js","pages/MaximumBoomLength/MaximumBoomLength.js","pages/MaximumRadius/MaximumRadius.js","App.js","index.js"],"names":["importImages","exam","signalsImg","Image0","Image1","Image2","Image3","Image4","Image5","Image6","Image7","Image8","Image9","Image10","Image11","Image12","Image13","Image14","Image15","Image16","rclImgs","ATimage","RTimage","TMimage","ExamResult","props","result","name","className","type","id","htmlFor","order","data","value","unit","rows","map","weight","i","val","Math","floor","random","colSpan","empty","ExamQuestion","uuid","require","examResultData","randomIndex","RclImage","holder","answerKey","key","ceil","number","toFixed","answer","popORshift","pop","shift","range","randomNbrs","length","r","indexOf","push","POL","rngFrom","fakeAnswers","handSignal","RCL","grove","style","backgroundImage","img","top","right","angle","radius","height","data1","dataNum1","data2","dataNum2","src","textAlign","qst","inputName","v1","checked","weights","generateWeigth","minWeight","maxWeight","randomBetween","min","max","generateWeigthsEelements","qstType","generateRanges","console","log","Ranges","groves","qstKeys","Range","rgrove","rkey","calcRangeLength","calcRangeHeight","calcRangeAngle","calcRangeRadius","generatePartOfLineElements","POLs","fakeAnswer1","fakeAnswer2","fakeAnswer3","rweight","rng","fixDuplicatedValues","rng2","rng3","generateHandSignalsElements","signals","handSignalsText","index","signal","array","currentIndex","shuffle","generateRclElements","Rcl","randomGroveNumber","Loadweights","generateRclLoadweights","mainValue","value1","value2","value3","values","radiansToDegrees","radians","PI","degreesToRadians","degrees","atan","acos","tan","sqrt","cos","ExamPage","useState","examQuestions","setExamQuestions","useEffect","onClick","HandSignal","ConvertWeights","PartOfLine","Navbar","animation","activeItemNewAnim","$","find","activeWidthNewAnimHeight","innerHeight","activeWidthNewAnimWidth","innerWidth","itemPosNewAnimTop","position","itemPosNewAnimLeft","css","left","on","e","removeClass","this","addClass","window","setTimeout","to","exact","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onMouseOver","document","getElementById","display","onMouseLeave","href","App","path","BoomAngle","GrossCapacity","LoadedBoomAngle","MaximumBoomLength","MaximumRadius","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.16c1020c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/0.27d85af0.png\";","export default __webpack_public_path__ + \"static/media/1.0cbd6c6e.png\";","export default __webpack_public_path__ + \"static/media/2.1561dd26.png\";","export default __webpack_public_path__ + \"static/media/3.4eba9c9e.png\";","export default __webpack_public_path__ + \"static/media/4.8acb0869.png\";","export default __webpack_public_path__ + \"static/media/5.ed15b86e.png\";","export default __webpack_public_path__ + \"static/media/6.c27708ed.png\";","export default __webpack_public_path__ + \"static/media/7.aeec0774.png\";","export default __webpack_public_path__ + \"static/media/8.d2aefed1.png\";","export default __webpack_public_path__ + \"static/media/9.552662ed.png\";","export default __webpack_public_path__ + \"static/media/10.71358ba5.png\";","export default __webpack_public_path__ + \"static/media/11.c7c2db8e.png\";","export default __webpack_public_path__ + \"static/media/12.2bee387f.png\";","export default __webpack_public_path__ + \"static/media/13.5b8e152b.png\";","export default __webpack_public_path__ + \"static/media/14.02d913dd.png\";","export default __webpack_public_path__ + \"static/media/15.d0d778f1.png\";","export default __webpack_public_path__ + \"static/media/16.bc39e506.png\";","export default __webpack_public_path__ + \"static/media/at.1bc89d7f.png\";","export default __webpack_public_path__ + \"static/media/rt.bf56400c.png\";","export default __webpack_public_path__ + \"static/media/tm.7c7f38c7.png\";","import Image0 from '../images/handSignals/0.png'\r\nimport Image1 from '../images/handSignals/1.png'\r\nimport Image2 from '../images/handSignals/2.png'\r\nimport Image3 from '../images/handSignals/3.png'\r\nimport Image4 from '../images/handSignals/4.png'\r\nimport Image5 from '../images/handSignals/5.png'\r\nimport Image6 from '../images/handSignals/6.png'\r\nimport Image7 from '../images/handSignals/7.png'\r\nimport Image8 from '../images/handSignals/8.png'\r\nimport Image9 from '../images/handSignals/9.png'\r\nimport Image10 from '../images/handSignals/10.png'\r\nimport Image11 from '../images/handSignals/11.png'\r\nimport Image12 from '../images/handSignals/12.png'\r\nimport Image13 from '../images/handSignals/13.png'\r\nimport Image14 from '../images/handSignals/14.png'\r\nimport Image15 from '../images/handSignals/15.png'\r\nimport Image16 from '../images/handSignals/16.png'\r\n\r\nimport ATimage from '../images/rcl/at.png'\r\nimport RTimage from '../images/rcl/rt.png'\r\nimport TMimage from '../images/rcl/tm.png'\r\n\r\n\r\nexport function importImages(exam) {\r\n    if(exam === \"hand signals\"){\r\n        let signalsImg = []\r\n        signalsImg[0] = Image0\r\n        signalsImg[1] = Image1\r\n        signalsImg[2] = Image2\r\n        signalsImg[3] = Image3\r\n        signalsImg[4] = Image4\r\n        signalsImg[5] = Image5\r\n        signalsImg[6] = Image6\r\n        signalsImg[7] = Image7\r\n        signalsImg[8] = Image8\r\n        signalsImg[9] = Image9\r\n        signalsImg[10] = Image10\r\n        signalsImg[11] = Image11\r\n        signalsImg[12] = Image12\r\n        signalsImg[13] = Image13\r\n        signalsImg[14] = Image14\r\n        signalsImg[15] = Image15\r\n        signalsImg[16] = Image16\r\n        return signalsImg\r\n    }if (exam === \"rcl\") {\r\n        let rclImgs = []\r\n        rclImgs[0] = ATimage\r\n        rclImgs[1] = RTimage\r\n        rclImgs[2] = TMimage\r\n        return rclImgs\r\n\r\n    }\r\n    \r\n}\r\n\r\n","import React from 'react'\r\nconst ExamResult = (props) => {\r\n    let result = \"\"\r\n    if (props.name) {\r\n        result = <div className='exam-question-result'>\r\n                    <input type=\"radio\" id={props.id} name={props.name}  />\r\n                    <label htmlFor={props.id} ><span>{props.order}.</span> {props.data.value} {props.data.unit}</label>\r\n                </div>\r\n    } else {\r\n        const rows = props.data.map((weight,i) => \r\n            {\r\n                let val = \"\"\r\n                if(i === 0) val = `${Math.floor(Math.random() * (700 - 200 + 1) +  200)} KG`\r\n                if(i === 1) val = `${Math.floor(Math.random() * (200 - 59 + 1) +  59)} KG`\r\n                if(i > 1) Math.floor(Math.random() * 3) == 0 ? val = \"⩗\" : val = \"\"\r\n                return (<tr key={i}>\r\n                        <td className=\"tg-0lax tg-left\" colSpan=\"2\">{weight}</td>\r\n                        <td className=\"tg-0lax tg-right\">{props.empty ? \"\" : val}</td>\r\n                    </tr>)\r\n            }\r\n        \r\n        )\r\n        result = <table className=\"tg\">\r\n                    <thead>\r\n                        {rows}\r\n                    </thead>\r\n                </table>\r\n    }\r\n    return (\r\n            \r\n       <div>\r\n        {\r\n            result\r\n        }\r\n       </div>\r\n      \r\n    )\r\n  }\r\n  export default ExamResult;","import React from 'react'\r\nimport ExamResult from './ExamResult'\r\nconst ExamQuestion = (props) => {\r\n    var uuid = require('uuid');\r\n    let examResultData= []\r\n    let randomIndex = Math.floor(Math.random() * 4)\r\n    let RclImage = \"\"\r\n    if(props.weight){\r\n        let holder = []\r\n        switch (props.weight.answerKey) {\r\n            case \"KG\":\r\n                if(props.weight.key === \"LBS\"){\r\n                    holder[0] = {value: Math.ceil(props.weight.number / 2) , unit: props.weight.answerKey} \r\n                    holder[1] = {value: Math.ceil(props.weight.number / 2.4) , unit: props.weight.answerKey} \r\n                    holder[2] = {value: Math.ceil(props.weight.number / 2.1) , unit: props.weight.answerKey} \r\n\r\n                }else { // KEY = TON\r\n                    holder[0] = {value: (props.weight.number * 100) , unit: props.weight.answerKey} \r\n                    holder[1] = {value: (props.weight.number * 10000) , unit: props.weight.answerKey} \r\n                    holder[2] = {value: (props.weight.number * 2200) , unit: props.weight.answerKey} \r\n                }\r\n                break;\r\n            case \"LBS\":\r\n                if(props.weight.key === \"KG\"){\r\n                    holder[0] = {value: Math.ceil(props.weight.number * 2), unit: props.weight.answerKey} \r\n                    holder[1] = {value: Math.ceil(props.weight.number * 2.4) , unit: props.weight.answerKey} \r\n                    holder[2] = {value: Math.ceil(props.weight.number * 2.1) , unit: props.weight.answerKey} \r\n\r\n                }else { // KEY = TON\r\n                    holder[0] = {value: (props.weight.number * 2000).toFixed(0) , unit: props.weight.answerKey} \r\n                    holder[1] = {value: (props.weight.number * 2400).toFixed(0) , unit: props.weight.answerKey} \r\n                    holder[2] = {value: (props.weight.number * 2100).toFixed(0) , unit: props.weight.answerKey} \r\n                }\r\n                break;\r\n            case \"TON\":\r\n                if(props.weight.key === \"LBS\"){\r\n                    holder[0] = {value: (props.weight.number / 2000).toFixed(0) , unit: props.weight.answerKey} \r\n                    holder[1] = {value: (props.weight.number / 2400).toFixed(0) , unit: props.weight.answerKey} \r\n                    holder[2] = {value: (props.weight.number / 2100).toFixed(0) , unit: props.weight.answerKey} \r\n\r\n                }else { // KEY = KG\r\n                    holder[0] = {value: (props.weight.number / 100 ).toFixed(0) , unit: props.weight.answerKey} \r\n                    holder[1] = {value: (props.weight.number / 1000 ).toFixed(0) , unit: props.weight.answerKey} \r\n                    holder[2] = {value: (props.weight.number / 2200 ).toFixed(0) , unit: props.weight.answerKey} \r\n                }\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n        for(let i=0; i<4; i++){\r\n            if(i === randomIndex) examResultData[i]={value: props.weight.answer, unit: props.weight.answerKey }\r\n            else {\r\n                let popORshift = Math.floor(Math.random() * 2)\r\n                if(popORshift) examResultData[i] = holder.pop()\r\n                else examResultData[i] = holder.shift()\r\n            }\r\n        }\r\n    }\r\n    if(props.range){\r\n        let unit = \"\"\r\n        props.range.key === \"angle\" ? unit = \"°\" : unit = \"M\"\r\n        for(let i=0; i<4; i++){\r\n            if(i === randomIndex) examResultData[i]={value: props.range.answer, unit: unit}\r\n            else {\r\n                let randomNbrs = [];\r\n                while(randomNbrs.length < 4){\r\n                    let r = Math.floor(Math.random() * 5) + 1;\r\n                    if(randomNbrs.indexOf(r) === -1) randomNbrs.push(r);\r\n                }\r\n                let plusORminus = Math.floor(Math.random() * 2)\r\n                if(plusORminus) {\r\n                    let val = props.range.answer + randomNbrs[i]\r\n                    examResultData[i] = {value: val, unit: unit}\r\n                }\r\n                else {\r\n                    let val = props.range.answer - randomNbrs[i]\r\n                    val > 0 ? val = val : val = props.range.answer + randomNbrs[i]\r\n                    examResultData[i] = {value: val, unit: unit}\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if(props.POL){\r\n        var rngFrom = [...props.POL.fakeAnswers]\r\n        for(let i=0; i<4; i++){\r\n            if(i === randomIndex) examResultData[i]={value: props.POL.answer, unit: \"line\"}\r\n            else {\r\n                let popORshift = Math.floor(Math.random() * 2)\r\n                if(popORshift) examResultData[i] = {value: rngFrom.pop(), unit: \"line\"}\r\n                else examResultData[i] = {value: rngFrom.shift(), unit: \"line\"}\r\n            }\r\n        }\r\n    }\r\n    if(props.handSignal){\r\n        var rngFrom = [...props.handSignal.fakeAnswers]\r\n        for(let i=0; i<4; i++){\r\n            if(i === randomIndex) examResultData[i]={value: props.handSignal.answer, unit: \"\"}\r\n            else {\r\n                let popORshift = Math.floor(Math.random() * 2)\r\n                if(popORshift) examResultData[i] = {value: rngFrom.pop(), unit: \"\"}\r\n                else examResultData[i] = {value: rngFrom.shift(), unit: \"\"}\r\n            }\r\n        }\r\n    }\r\n    if(props.RCL){\r\n        switch (props.RCL.grove) {\r\n            case \"AT 750B\":\r\n                RclImage = <div className='exam-question-rcl-img-container' style={{backgroundImage: `url(${props.RCL.img})`}} >\r\n                                <div className='exam-question-rcl-img-angle'  style={{top:\"65%\",right:\"20%\"}}>{props.RCL.angle}°</div>\r\n                                <div className='exam-question-rcl-img-length' style={{top:\"74%\",right:\"70%\"}}>{props.RCL.length}m</div>\r\n                                {/* <div className='exam-question-rcl-img-height' style={{top:\"\",right:\"\"}}>{props.RCL.height}m</div> */}\r\n                                <div className='exam-question-rcl-img-radius' style={{top:\"24%\",right:\"86%\"}}>{props.RCL.radius}m</div>\r\n                            </div>\r\n                break;\r\n            case \"RT 755\":\r\n                RclImage = <div className='exam-question-rcl-img-container' style={{backgroundImage: `url(${props.RCL.img})`}} > \r\n                                <div className='exam-question-rcl-img-angle'  style={{top:\"73%\",right:\"82%\"}}>{props.RCL.angle}°</div>\r\n                                <div className='exam-question-rcl-img-length' style={{top:\"55%\",right:\"26%\"}}>{props.RCL.length}m</div>\r\n                                <div className='exam-question-rcl-img-height' style={{top:\"41%\",right:\"55%\"}}>{props.RCL.height}m</div>\r\n                                <div className='exam-question-rcl-img-radius' style={{top:\"26%\",right:\"37%\"}}>{props.RCL.radius}m</div>\r\n                            </div>\r\n                break;\r\n            case \"TM 1150\":\r\n                RclImage = <div className='exam-question-rcl-img-container' style={{backgroundImage: `url(${props.RCL.img})`}} > \r\n                            <div className='exam-question-rcl-img-angle'  style={{top:\"76%\",right:\"77%\"}}>{props.RCL.angle}°</div>\r\n                            <div className='exam-question-rcl-img-length' style={{top:\"59%\",right:\"25%\"}}>{props.RCL.length}m</div>\r\n                            <div className='exam-question-rcl-img-height' style={{top:\"58%\",right:\"59%\"}}>{props.RCL.height}m</div>\r\n                            <div className='exam-question-rcl-img-radius' style={{top:\"32%\",right:\"36%\"}}>{props.RCL.radius}m</div>\r\n                        </div>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <div className='exam-question'>\r\n            <div className='exam-question-line'>\r\n                {   props.weight &&\r\n                    <div><span>{props.order}.</span> How many {props.weight.answerKey} is <span >({props.weight.number}) {props.weight.key} </span> . Do any calculations in this space.</div>\r\n                }\r\n                {\r\n                    props.range &&\r\n                    <div>\r\n                        <div><span>{props.order}.</span> Using the grove <span >({props.range.grove})</span> Range Diagram.</div>\r\n                        <div className='exam-question-data'>\r\n                            <div>{props.range.data1} = {props.range.dataNum1} {props.range.data1 === \"Angle\" ? \"°\" : \"M\"} </div>\r\n                            <div>{props.range.data2} = {props.range.dataNum2} {props.range.data2 === \"angle\" ? \"°\" : \"M\"}</div>\r\n                        </div>\r\n                        \r\n                        <div className='exam-question-mainQst'><span>What is the {props.range.key}?</span></div>\r\n                    </div>\r\n                }\r\n                {   props.POL &&\r\n                    <div><span>{props.order}.</span> Using the grove <span >({props.POL.grove})</span>load chart . how many parts of line are needed to lift <span >({`${props.POL.weight} ${props.POL.unit}`})</span> .</div>\r\n                }\r\n                {   props.handSignal &&\r\n                    <div>\r\n                        <div><span>{props.order}.</span> What does this sign mean?.</div>\r\n                        <div>\r\n                            <img src={props.handSignal.img} className=\"exam-question-handSignal-img\" />\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {   props.RCL &&\r\n                    <div>\r\n                        <div style={{textAlign: \"center\"}} >Refer to drawing and the Grove <span >({props.RCL.grove})</span> load chart and range diagram.</div>\r\n                        <h5 style={{textAlign: \"center\"}}>{props.RCL.qst}</h5>\r\n                        {RclImage}\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div >\r\n                {\r\n                    (props.weight || props.range || props.POL|| props.handSignal ) && \r\n                    <div className='exam-question-results'>\r\n                        <ExamResult data={examResultData[0]} order=\"A\"  name={props.inputName} id={uuid.v1()} checked={props.checked} />\r\n                        <ExamResult data={examResultData[1]} order=\"B\"  name={props.inputName} id={uuid.v1()} checked={props.checked}  />\r\n                        <ExamResult data={examResultData[2]} order=\"C\"  name={props.inputName} id={uuid.v1()} checked={props.checked}  />\r\n                        <ExamResult data={examResultData[3]} order=\"D\"  name={props.inputName} id={uuid.v1()} checked={props.checked}  />\r\n                    </div>\r\n                }\r\n                {\r\n                    props.RCL && \r\n                    <ExamResult data={props.RCL.weights}  />\r\n                }\r\n                {\r\n                    props.RCL && \r\n                    <hr/>\r\n                }\r\n                {\r\n                    props.RCL && \r\n                    <div className='exam-question-rcl-img-container' style={{backgroundImage: `url(${props.RCL.img})`}} ></div>\r\n                }\r\n                {\r\n                    props.RCL && \r\n                    <ExamResult data={props.RCL.weights} empty={true} />\r\n                }\r\n                \r\n                \r\n\r\n            </div>\r\n\r\n    </div>\r\n      \r\n    )\r\n  }\r\n  export default ExamQuestion;","import ExamQuestion from '../Components/ExamQuestion' \r\nconst {importImages} = require('./imagesImport')\r\n\r\nfunction shuffle(array) {\r\n  let currentIndex = array.length,  randomIndex;\r\n  while (currentIndex != 0) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex], array[currentIndex]];\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction generateWeigth(){\r\n  const keys = [\"KG\", \"LBS\", \"TON\"]\r\n  let minWeight = 2500\r\n  let maxWeight = 37500\r\n  const key = keys[Math.floor(Math.random() * 3)]\r\n  let weight = {\r\n    number: 0,\r\n    answer: 0,\r\n    key: \"\",\r\n    answerKey: \"\"\r\n  }\r\n  switch (key) {\r\n    case \"KG\":\r\n      weight.answerKey = \"KG\"\r\n      if(Math.floor(Math.random() * 2)){\r\n        minWeight = minWeight * 2.2\r\n        maxWeight = maxWeight * 2.2\r\n        do {\r\n          weight.number = Math.floor(Math.random() * (maxWeight - minWeight + 1)) + minWeight\r\n        } while ((((weight.number*10) % 22)/10) != 0);\r\n        weight.answer = Math.ceil(weight.number / 2.2)\r\n        weight.key = \"LBS\"\r\n      }else{\r\n        minWeight = minWeight / 1000\r\n        maxWeight = maxWeight / 1000\r\n        weight.number = Math.floor(Math.random() * (maxWeight - minWeight + 1)) + minWeight\r\n        weight.answer = weight.number * 1000 //kg\r\n        weight.key = \"TON\"\r\n      }\r\n      \r\n      break;\r\n    case \"LBS\":\r\n      weight.answerKey = \"LBS\"\r\n      if(Math.floor(Math.random() * 2)){\r\n        minWeight = minWeight * 2.2\r\n        maxWeight = maxWeight * 2.2\r\n        do {\r\n          weight.answer = Math.floor(Math.random() * (maxWeight - minWeight + 1)) + minWeight\r\n        } while ((((weight.answer*10) % 22)/10) != 0);\r\n        weight.number = Math.ceil(weight.answer / 2.2) // kg\r\n        weight.key = \"KG\"\r\n      }else{\r\n        minWeight = minWeight * 2.2\r\n        maxWeight = maxWeight * 2.2\r\n        do {\r\n          weight.answer = Math.floor(Math.random() * (maxWeight - minWeight + 1)) + minWeight\r\n        } while ((((weight.answer*10) % 22)/10) != 0);\r\n        weight.number = weight.answer / 2200 //ton\r\n        weight.key = \"TON\"\r\n      }\r\n    \r\n      break;\r\n    case \"TON\":\r\n      weight.answerKey = \"TON\"\r\n      if(Math.floor(Math.random() * 2)){\r\n        minWeight = minWeight * 2.2\r\n        maxWeight = maxWeight * 2.2\r\n        do {\r\n          weight.number = Math.floor(Math.random() * (maxWeight - minWeight + 1)) + minWeight\r\n        } while ((((weight.number*10) % 22)/10) != 0);\r\n        weight.answer = weight.number / 2200 // ton\r\n        weight.key = \"LBS\"\r\n      }else{\r\n        weight.number = Math.floor(Math.random() * (maxWeight - minWeight + 1)) + minWeight\r\n        weight.answer = weight.number / 1000\r\n        weight.key = \"KG\"\r\n      }\r\n    \r\n      break;\r\n  \r\n    default:\r\n      break;\r\n  }\r\n  return weight\r\n}\r\nfunction randomBetween(min, max){\r\n  return Math.floor(Math.random() * (max - min + 1)) + min\r\n}\r\nexport function generateWeigthsEelements(name){\r\n    let weights=[]\r\n    for(let i=0; i<20; i++){\r\n        let weight = generateWeigth()\r\n        weights.push(<ExamQuestion key={i} weight={weight} order={i+1} inputName={\"inputsNumber\"+i} qstType={name} />)\r\n    }\r\n    return weights\r\n}\r\nexport function generateRanges(name){\r\n  console.log(\"in range  function 1\")\r\n    let Ranges=[]\r\n    let groves = [\"AT 750B\",\"RT 755\",\"TM 1150\"]\r\n    let qstKeys = [\"length\",\"top height\",\"angle\",\"radius\",\"hook elevation\"]\r\n    for(let i=0; i<20; i++){\r\n        let Range = {\r\n            data1 : \"\",\r\n            data2 : \"\",\r\n            grove : \"\",\r\n            key : \"\",\r\n            dataNum1 :0,\r\n            dataNum2 : 0,\r\n            answer: 0\r\n        }\r\n        let data = {\r\n          data2: \"\",\r\n          dataNum2: 0\r\n        }\r\n        const rgrove = groves[ Math.floor(Math.random() * groves.length) ]\r\n        const rkey = qstKeys[Math.floor(Math.random() * qstKeys.length)]\r\n        console.log(\"in range  function 2\")\r\n        switch(rkey) {\r\n            case \"length\":\r\n                Range.dataNum1 = randomBetween(8,44)\r\n                Range.data1 = \"Radius\"\r\n                if(Math.floor(Math.random() * 2)){\r\n                  data={data2:\"top height\",dataNum2: randomBetween(10,50)} \r\n                  Range.answer = calcRangeLength(Range.dataNum1,data.dataNum2,0)\r\n                }else{\r\n                  data={data2:\"angle\",dataNum2: randomBetween(10,71)}\r\n                  Range.answer = calcRangeLength(Range.dataNum1,0,data.dataNum2)\r\n                }\r\n              break;\r\n            case \"top height\":\r\n                Range.dataNum1 = randomBetween(8,20)\r\n                Range.data1 = \"Radius\"\r\n                if(Math.floor(Math.random() * 2)){\r\n                  data={data2:\"length\",dataNum2: randomBetween(21,44)} \r\n                  Range.answer = calcRangeHeight(Range.dataNum1,0,data.dataNum2)\r\n                }else{\r\n                  data={data2:\"angle\",dataNum2: randomBetween(10,71)}\r\n                  Range.answer = calcRangeHeight(Range.dataNum1,data.dataNum2,0)\r\n                }\r\n            break;\r\n            case \"angle\":\r\n                Range.dataNum1 = randomBetween(8,20)\r\n                Range.data1 = \"Radius\"\r\n                if(Math.floor(Math.random() * 2)){\r\n                  data={data2:\"top height\",dataNum2: randomBetween(21,50)} \r\n                  Range.answer = calcRangeAngle(Range.dataNum1,data.dataNum2,0)\r\n                }else{\r\n                  data={data2:\"length\",dataNum2: randomBetween(11,40)}\r\n                  Range.answer = calcRangeAngle(Range.dataNum1,0,data.dataNum2)\r\n                }\r\n            break;\r\n            case \"radius\":\r\n                Range.dataNum1 = randomBetween(10,71)\r\n                Range.data1 = \"Angle\"\r\n                if(Math.floor(Math.random() * 2)){\r\n                  data={data2:\"top height\",dataNum2: randomBetween(10,50)} \r\n                  Range.answer = calcRangeRadius(Range.dataNum1,data.dataNum2,0)\r\n                }else{\r\n                  data={data2:\"length\",dataNum2: randomBetween(11,40)}\r\n                  Range.answer = calcRangeRadius(Range.dataNum1,0,data.dataNum2)\r\n                }\r\n            break;\r\n            case \"hook elevation\":\r\n                Range.dataNum1 = randomBetween(8,44)\r\n                Range.data1 = \"Radius\"\r\n                if(Math.floor(Math.random() * 2)){\r\n                  data={data2:\"length\",dataNum2: randomBetween(11,40)}\r\n                  Range.answer = randomBetween(10,40)\r\n                }else{\r\n                  data={data2:\"angle\",dataNum2: randomBetween(10,71)}\r\n                  Range.answer = randomBetween(10,40)\r\n                }\r\n              break;\r\n            default:\r\n              break;\r\n              \r\n          }\r\n          console.log(\"in range  function 3\")\r\n        Range={...Range, grove: rgrove, key: rkey, data2: data.data2, dataNum2: data.dataNum2}\r\n        Ranges.push(<ExamQuestion key={i} range={Range} order={i+1} inputName={\"inputsNumber\"+i} qstType={name}/>)\r\n    }\r\n    console.log(\"in range  function 4\")\r\n    return Ranges\r\n}\r\n\r\nexport function generatePartOfLineElements(name){\r\n  let POLs = []\r\n  let groves = [\"AT 750B\",\"RT 755\",\"TM 1150\"]\r\n  let fakeAnswer1 = 0\r\n  let fakeAnswer2 = 0\r\n  let fakeAnswer3 = 0\r\n  for(let i=0; i<20; i++){\r\n    let POL = {\r\n        grove : \"\",\r\n        weight: 0,\r\n        unit : \"\",\r\n        answer: 0,\r\n        fakeAnswers: []\r\n    }\r\n    const rgrove = groves[ Math.floor(Math.random() * groves.length) ]\r\n    const rweight = Math.floor(Math.random() * (100 - 10 + 1)) + 10 // in TON\r\n    switch(rgrove) {\r\n        case \"AT 750B\":\r\n            let rng = Math.floor(Math.random() * 3) \r\n            if(rng === 0){\r\n              POL.unit = \"TON\"\r\n              POL.grove = rgrove\r\n              POL.weight = rweight\r\n              POL.answer = Math.ceil((rweight * 1000) / 5860)\r\n              fakeAnswer1 = Math.ceil((rweight * 1000) / 6850)\r\n              fakeAnswer2 = Math.ceil((rweight * 1000) / 9166)\r\n              fakeAnswer3 = Math.ceil((rweight * 1000) / 6250)\r\n              POL.fakeAnswers = fixDuplicatedValues(POL.answer, fakeAnswer1, fakeAnswer2, fakeAnswer3)\r\n            }else if (rng === 1) {\r\n              POL.unit = \"KG\"\r\n              POL.grove = rgrove\r\n              POL.weight = rweight * 1000\r\n              POL.answer = Math.ceil((rweight * 1000) / 5860)\r\n              fakeAnswer1 = Math.ceil((rweight * 1000) / 6850)\r\n              fakeAnswer2 = Math.ceil((rweight * 1000) / 9166)\r\n              fakeAnswer3 = Math.ceil((rweight * 1000) / 6250)\r\n              POL.fakeAnswers = fixDuplicatedValues(POL.answer, fakeAnswer1, fakeAnswer2, fakeAnswer3)\r\n            } else {\r\n              POL.unit = \"LBS\"\r\n              POL.grove = rgrove\r\n              POL.weight = rweight * 2200\r\n              POL.answer = Math.ceil((rweight * 1000) / 5860)\r\n              fakeAnswer1 = Math.ceil((rweight * 1000) / 6850)\r\n              fakeAnswer2 = Math.ceil((rweight * 1000) / 9166)\r\n              fakeAnswer3 = Math.ceil((rweight * 1000) / 6250)\r\n              POL.fakeAnswers = fixDuplicatedValues(POL.answer, fakeAnswer1, fakeAnswer2, fakeAnswer3)\r\n            }\r\n          break;\r\n        case \"RT 755\":\r\n          let rng2 = Math.floor(Math.random() * 3) \r\n          if(rng2 === 0){\r\n            POL.unit = \"TON\"\r\n            POL.grove = rgrove\r\n            POL.weight = rweight\r\n            POL.answer = Math.ceil((rweight * 1000) / 6250)\r\n            fakeAnswer1 = Math.ceil((rweight * 1000) / 5860)\r\n            fakeAnswer2 = Math.ceil((rweight * 1000) / 9166)\r\n            fakeAnswer3 = Math.ceil((rweight * 1000) / 5260)\r\n            POL.fakeAnswers = fixDuplicatedValues(POL.answer, fakeAnswer1, fakeAnswer2, fakeAnswer3)\r\n          }else if (rng2 === 1) {\r\n            POL.unit = \"KG\"\r\n            POL.grove = rgrove\r\n            POL.weight = rweight * 1000\r\n            POL.answer = Math.ceil((rweight * 1000) / 6250)\r\n            fakeAnswer1 = Math.ceil((rweight * 1000) / 5860)\r\n            fakeAnswer2 = Math.ceil((rweight * 1000) / 9166)\r\n            fakeAnswer3 = Math.ceil((rweight * 1000) / 5260)\r\n            POL.fakeAnswers = fixDuplicatedValues(POL.answer, fakeAnswer1, fakeAnswer2, fakeAnswer3)\r\n          } else {\r\n            POL.unit = \"LBS\"\r\n            POL.grove = rgrove\r\n            POL.weight = rweight * 2200\r\n            POL.answer = Math.ceil((rweight * 1000) / 6250)\r\n            fakeAnswer1 = Math.ceil((rweight * 1000) / 5860)\r\n            fakeAnswer2 = Math.ceil((rweight * 1000) / 9166)\r\n            fakeAnswer3 = Math.ceil((rweight * 1000) / 5260)\r\n            POL.fakeAnswers = fixDuplicatedValues(POL.answer, fakeAnswer1, fakeAnswer2, fakeAnswer3)\r\n          }\r\n        break;\r\n        case \"TM 1150\":\r\n          let rng3 = Math.floor(Math.random() * 3) \r\n          if(rng3 === 0){\r\n            POL.unit = \"TON\"\r\n            POL.grove = rgrove\r\n            POL.weight = rweight\r\n            POL.answer = Math.ceil((rweight * 1000) / 9166)\r\n            fakeAnswer1 = Math.ceil((rweight * 1000) / 5860)\r\n            fakeAnswer2 = Math.ceil((rweight * 1000) / 6199)\r\n            fakeAnswer3 = Math.ceil((rweight * 1000) / 6250)\r\n            POL.fakeAnswers = fixDuplicatedValues(POL.answer, fakeAnswer1, fakeAnswer2, fakeAnswer3)\r\n          }else if (rng3 === 1) {\r\n            POL.unit = \"KG\"\r\n            POL.grove = rgrove\r\n            POL.weight = rweight * 1000\r\n            POL.answer = Math.ceil((rweight * 1000) / 9166)\r\n            fakeAnswer1 = Math.ceil((rweight * 1000) / 5860)\r\n            fakeAnswer2 = Math.ceil((rweight * 1000) / 6199)\r\n            fakeAnswer3 = Math.ceil((rweight * 1000) / 6250)\r\n            POL.fakeAnswers = fixDuplicatedValues(POL.answer, fakeAnswer1, fakeAnswer2, fakeAnswer3)\r\n          } else {\r\n            POL.unit = \"LBS\"\r\n            POL.grove = rgrove\r\n            POL.weight = rweight * 2200\r\n            POL.answer = Math.ceil((rweight * 1000) / 9166)\r\n            fakeAnswer1 = Math.ceil((rweight * 1000) / 5860)\r\n            fakeAnswer2 = Math.ceil((rweight * 1000) / 6199)\r\n            fakeAnswer3 = Math.ceil((rweight * 1000) / 6250)\r\n            POL.fakeAnswers = fixDuplicatedValues(POL.answer, fakeAnswer1, fakeAnswer2, fakeAnswer3)\r\n          }\r\n        break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n    POLs.push(<ExamQuestion key={i} POL={POL} order={i+1} inputName={\"inputsNumber\"+i} qstType={name}/>)\r\n  }\r\n  return POLs\r\n} \r\nexport function generateHandSignalsElements(name) {\r\n  let signals=[]\r\n  let signalsImg = importImages(\"hand signals\")\r\n  let handSignalsText =[\r\n    \"Use main hoist\",\r\n    \"Use auxiliary hoist\",\r\n    \"Raise boom\",\r\n    \"Lower boom\",\r\n    \"Raise hoist\",\r\n    \"Raise hoist slowly\",\r\n    \"Lower hoist\",\r\n    \"Lower hoist slowly\",\r\n    \"Extend boom\",\r\n    \"Retract boom\",\r\n    \"Extend boom one hand\",\r\n    \"Retract boom one hand\",\r\n    \"Lower boom & raise hoist\",\r\n    \"Raise boom & lower hoist\",\r\n    \"Stop\",\r\n    \"Swing\",\r\n    \"Dog everything\"\r\n  ]\r\n  for (let index = 0; index < signalsImg.length; index++) {\r\n    let signal ={\r\n      img: signalsImg[index],\r\n      answer: handSignalsText[index],\r\n      fakeAnswers: [\"\",\"\",\"\"]\r\n    }\r\n    while ( signal.answer === signal.fakeAnswers[0] || signal.answer === signal.fakeAnswers[1] || signal.answer === signal.fakeAnswers[2] || \r\n      signal.fakeAnswers[0] === signal.fakeAnswers[1] || signal.fakeAnswers[0] === signal.fakeAnswers[2] ||\r\n      signal.fakeAnswers[1] === signal.fakeAnswers[2] ) {\r\n      \r\n        signal.fakeAnswers[0] = handSignalsText[Math.floor(Math.random() * 17)]\r\n        signal.fakeAnswers[1] = handSignalsText[Math.floor(Math.random() * 17)]\r\n        signal.fakeAnswers[2] = handSignalsText[Math.floor(Math.random() * 17)]\r\n    }\r\n    signals[index] = <ExamQuestion key={index} handSignal={signal} order={index+1} inputName={\"inputsNumber\"+index} qstType={name} /> ;\r\n    \r\n  }\r\n  signals = shuffle(signals)\r\n  return signals\r\n}\r\nfunction generateRclLoadweights(grove) {\r\n  let Loadweights = []\r\n  switch (grove) {\r\n    case \"AT 750B\":\r\n      Loadweights[0] = \"LOAD WEIGHT\"\r\n      Loadweights[1] = \"RIGGING EQUIPMENT WEIGHT\"\r\n      Loadweights[2] = \"STOWED SWINGAWY\"\r\n      Loadweights[3] = \"EXTENDED SWINGAWY\"\r\n      Loadweights[4] = \"POWER PIN FLY EXTENDED\"\r\n      Loadweights[5] = \"POWER PIN FLY STOWED\"\r\n      Loadweights[6] = \"13.6 MT 1 – SHEAVE\"\r\n      Loadweights[7] = \"27.2 MT 2 - SHEAVE\"\r\n      Loadweights[8] = \"36.3 MT 4 - SHEAVE\"\r\n      Loadweights[9] = \"36.3 MT 4 – SHEAVE (W/CHEEK PLATES)\"\r\n      Loadweights[10] = \"40.8 MT 3 – SHEAVE\"\r\n      Loadweights[11] = \"40.8 MT 3- SHEAVE (W/CHEEK PLATES)\"\r\n      Loadweights[12] = \"AUXILIARY BOOM NOSE\"\r\n      Loadweights[13] = \"9.1 MT. HEADACHE BALL\"\r\n      Loadweights[14] = \"6.8 MT. HEADACHE BALL\"\r\n      \r\n      break;\r\n    case \"RT 755\":\r\n      Loadweights[0] = \"LOAD WEIGHT\"\r\n      Loadweights[1] = \"RIGGING EQUIPMENT WEIGHT\"\r\n      Loadweights[2] = \"STOWED SWINGAWY\"\r\n      Loadweights[3] = \"EXTENDED SWINGAWY\"\r\n      Loadweights[4] = \"POWER PIN FLY EXTENDED\"\r\n      Loadweights[5] = \"POWER PIN FLY STOWED\"\r\n      Loadweights[6] = \"55 Ton (50 MT) 4 Sheave\"\r\n      Loadweights[7] = \"15 Ton (13.6 MT) 1 Sheave\"\r\n      Loadweights[8] = \"Auxiliary Boom Head\"\r\n      Loadweights[9] = \"5 Ton (4.5 MT) Headache Ball\"\r\n      Loadweights[10] = \"7-1/2 Ton (6.8 MT) Headache Ball\"\r\n      Loadweights[11] = \"10 Ton (9.1 MT) Headache Ball\"\r\n    \r\n      break;\r\n    case \"TM 1150\":\r\n      Loadweights[0] = \"LOAD WEIGHT\"\r\n      Loadweights[1] = \"RIGGING EQUIPMENT WEIGHT\"\r\n      Loadweights[2] = \"STOWED SWINGAWY\"\r\n      Loadweights[3] = \"EXTENDED SWINGAWY\"\r\n      Loadweights[4] = \"POWER PIN FLY EXTENDED\"\r\n      Loadweights[5] = \"POWER PIN FLY STOWED\"\r\n      Loadweights[6] = \"125Ton6 – SHEAVE\"\r\n      Loadweights[7] = \"30 Ton1 - SHEAVE\"\r\n      Loadweights[8] = \"AUXILIARY BOOM BALL\"\r\n      Loadweights[9] = \"10Ton HEADACHE BALL\"\r\n      Loadweights[10] = \"15Ton HEADACHE BALL\"\r\n    \r\n      break;\r\n  \r\n    default:\r\n      break;\r\n  }\r\n  return Loadweights\r\n}\r\nexport function generateRclElements(name){\r\n  let Rcl= {\r\n    grove: \"\",\r\n    img   : \"\",\r\n    height: \"\",\r\n    length: \"\",\r\n    angle : \"\",\r\n    radius: \"\",\r\n    weights: [],\r\n    qst: \"\"\r\n  }\r\n  let rclImgs = importImages(\"rcl\")\r\n  let groves = [\"AT 750B\",\"RT 755\",\"TM 1150\"]\r\n  let min = {\r\n    height: 10,\r\n    length: 10,\r\n    angle : 10,\r\n    radius: 4,\r\n  }\r\n  let max = {\r\n    height: 54,\r\n    length: 60,\r\n    angle : 71,\r\n    radius: 44,\r\n  } \r\n  const randomGroveNumber = Math.floor(Math.random() * groves.length)\r\n  Rcl.grove = groves[ randomGroveNumber ]\r\n  Rcl.img = rclImgs[randomGroveNumber]\r\n  Rcl.height = Math.floor(Math.random() * (max.height - min.height + 1)) + min.height\r\n  Rcl.length = Math.floor(Math.random() * (max.length - min.length + 1)) + min.length\r\n  Rcl.angle = Math.floor(Math.random() * (max.angle - min.angle + 1)) + min.angle\r\n  Rcl.radius = Math.floor(Math.random() * (max.radius - min.radius + 1)) + min.radius\r\n  Rcl.weights = generateRclLoadweights(Rcl.grove)\r\n\r\n  switch (name) {\r\n    case \"Total weight\":\r\n      Rcl.qst = \"What is the total weight of the load?\"\r\n      break;\r\n    case \"Maximum radius\":\r\n      Rcl.qst = \"What is the Maximum Radius can be lifted?\"\r\n      break;\r\n    case \"Gross capacity\":\r\n      Rcl.qst = \"What is the Gross Capacity at Minimum Radius?\"\r\n      break;\r\n    case \"Boom angle high and low\":\r\n      Rcl.qst = \"What is the High Boom Angle at Minimum Radius?\"\r\n      break;\r\n    case \"Loaded boom angle\":\r\n      Rcl.qst = \"What is the Loaded Boom Angle at Minimum Radius?\"\r\n      break;\r\n    case \"Maximum Boom Length\":\r\n      Rcl.qst = \"What is the Maximum Boom Length of the lift shown?\"\r\n      break;\r\n  \r\n    default:\r\n      break;\r\n  }\r\n\r\n  return <ExamQuestion RCL={Rcl} inputName={\"inputsNumber\"+1} qstType={name} />\r\n}\r\n\r\nfunction fixDuplicatedValues(mainValue, value1, value2, value3) {\r\n  let values = []\r\n  let plusORminus = 0\r\n  while ( mainValue === value1 || mainValue === value2 || mainValue === value3 || value1 === value2 || value1 === value3 || value2 === value3  ) {\r\n    plusORminus = Math.floor(Math.random() * 2)\r\n    if(plusORminus) {\r\n      value1++\r\n      value2--\r\n      value3 = value3 + Math.floor(Math.random() * 4)\r\n    }\r\n    else{\r\n      value1--\r\n      value2++\r\n      value3 = value3 + Math.floor(Math.random() * 4)\r\n    }\r\n  }\r\n  values[0] = value1\r\n  values[1] = value2\r\n  values[2] = value3\r\n  return values\r\n}\r\nexport function radiansToDegrees(radians)\r\n{\r\n  var pi = Math.PI;\r\n  return radians * (180/pi);\r\n}\r\nfunction degreesToRadians(degrees)\r\n{\r\n  var pi = Math.PI;\r\n  return degrees * (pi/180);\r\n}\r\nfunction calcRangeAngle(radius, height = 0, length = 0) {\r\n  if ( height ) {\r\n    return Math.floor(radiansToDegrees(Math.atan(height / radius)) )\r\n  }\r\n  if (length) {\r\n    return Math.floor(radiansToDegrees(Math.acos(radius / length))) // R/L >= -1 && <= 1 \r\n  }\r\n}\r\nfunction calcRangeHeight(radius, angle = 0, length = 0) {\r\n  if ( angle ) {\r\n    return Math.floor(radius * Math.tan(angle)) // need fix\r\n  }\r\n  if (length) {\r\n    return Math.floor(Math.sqrt(( length * length) - (radius * radius))) // need adjustment\r\n  }\r\n}\r\nfunction calcRangeLength(radius, height = 0, angle = 0) {\r\n  if ( height ) {\r\n    return Math.floor(Math.sqrt(( radius * radius) + (height * height)))\r\n  }\r\n  if (angle) {\r\n    return Math.floor( radius / Math.cos(degreesToRadians(angle))) // angle !== 90 // need fix\r\n  }\r\n}\r\nfunction calcRangeRadius(angle, height = 0, length = 0) {\r\n  if ( height ) {\r\n    return Math.floor( height / Math.tan(degreesToRadians(angle))) // angle !== 90\r\n  }\r\n  if (length) {\r\n    // return  Math.sqrt(( length * length) - (height * height))\r\n    return Math.floor( Math.cos(degreesToRadians(angle)) * length)\r\n  }\r\n}\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport './style.css'; \r\nimport {generateWeigthsEelements, \r\n    generateRanges, \r\n    generatePartOfLineElements, \r\n    generateHandSignalsElements,\r\n    generateRclElements\r\n} from '../generate_Exam/examGenerator'\r\nconst ExamPage = (props) => {\r\n    const [examQuestions, setExamQuestions] = useState([])\r\n    function generate(){\r\n        if(props.name === \"Convert Weights\"){\r\n            setExamQuestions( generateWeigthsEelements(props.name))\r\n        \r\n        }if(props.name === \"Range\"){\r\n            console.log(\"in page exam if\")\r\n            setExamQuestions( generateRanges(props.name))\r\n\r\n        }if(props.name === \"Part of line\"){\r\n            setExamQuestions( generatePartOfLineElements(props.name))\r\n        }\r\n        if(props.name === \"Hand Signals\"){\r\n            setExamQuestions( generateHandSignalsElements(props.name))\r\n        }\r\n        if(props.name === \"Total weight\" \r\n        || props.name === \"Maximum radius\" \r\n        || props.name === \"Gross capacity\" \r\n        || props.name === \"Boom angle high and low\" \r\n        || props.name === \"Loaded boom angle\" \r\n        || props.name === \"Maximum Boom Length\"){\r\n            setExamQuestions( generateRclElements(props.name))\r\n        }\r\n        \r\n    }\r\n    useEffect(()=>{\r\n        if(props.name=== \"Convert Weights\"){\r\n            setExamQuestions( generateWeigthsEelements(props.name))\r\n        \r\n        }\r\n        if(props.name=== \"Range\"){\r\n            setExamQuestions( generateRanges(props.name))\r\n        \r\n        }if(props.name=== \"Part of line\"){\r\n            setExamQuestions( generatePartOfLineElements(props.name))\r\n        }\r\n        if(props.name=== \"Hand Signals\"){\r\n            setExamQuestions( generateHandSignalsElements(props.name))\r\n        }if(props.name=== \"Total weight\" \r\n        || props.name=== \"Maximum radius\" \r\n        || props.name=== \"Gross capacity\" \r\n        || props.name=== \"Boom angle high and low\" \r\n        || props.name=== \"Loaded boom angle\" \r\n        || props.name=== \"Maximum Boom Length\"){\r\n            setExamQuestions( generateRclElements(props.name))\r\n        }\r\n        \r\n    },[])   \r\n    return (\r\n        <section className='exam-page container' >\r\n            <h2>\r\n                {props.name}\r\n            </h2>\r\n\r\n            <div>\r\n                <div className=\"exam-question-container\">\r\n                    \r\n                   {examQuestions}\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"button-wrap-2 button\" onClick={generate}>\r\n                <a className=\"circle\">Generate</a>\r\n                <div className=\"outer-circle\"></div>\r\n            </div>\r\n        </section>\r\n      \r\n    )\r\n  }\r\n  export default ExamPage;","import React from 'react'\r\nimport ExamPage from '../../Components/ExamPage'\r\nconst HandSignal = () => {\r\n  return (\r\n    <ExamPage name=\"Hand Signals\"/>\r\n  )\r\n}\r\nexport default HandSignal;","import React from 'react'\r\nimport ExamPage from '../../Components/ExamPage'\r\nconst Rcl = () => {\r\n  return (\r\n    <ExamPage name=\"Total weight\"/>\r\n  )\r\n}\r\nexport default Rcl;","import React from 'react'\r\nimport ExamPage from '../../Components/ExamPage'\r\nconst Range = () => {\r\n  return (\r\n    <ExamPage name=\"Range\"/>\r\n  )\r\n}\r\nexport default Range;","import React from 'react'\r\nimport ExamPage from '../../Components/ExamPage'\r\nconst ConvertWeights = () => {\r\n  return (\r\n    <ExamPage name=\"Convert Weights\"/>\r\n        \r\n  )\r\n}\r\nexport default ConvertWeights;","import React from 'react'\r\nimport ExamPage from '../../Components/ExamPage'\r\nconst PartOfLine = () => {\r\n  return (\r\n    <ExamPage name=\"Part of line\"/>\r\n  )\r\n}\r\nexport default PartOfLine;","import React , {useEffect} from 'react'\r\nimport './Navbar.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport $ from 'jquery';\r\n\r\nconst Navbar = () => {\r\n\r\n  function animation(){\r\n    var tabsNewAnim = $('#navbarSupportedContent');\r\n    var activeItemNewAnim = tabsNewAnim.find('.active');\r\n    var activeWidthNewAnimHeight = activeItemNewAnim.innerHeight();\r\n    var activeWidthNewAnimWidth = activeItemNewAnim.innerWidth();\r\n    var itemPosNewAnimTop = activeItemNewAnim.position();\r\n    var itemPosNewAnimLeft = activeItemNewAnim.position();\r\n    $(\".hori-selector\").css({\r\n      \"top\":itemPosNewAnimTop.top + \"px\", \r\n      \"left\":itemPosNewAnimLeft.left + \"px\",\r\n      \"height\": activeWidthNewAnimHeight + \"px\",\r\n      \"width\": activeWidthNewAnimWidth + \"px\"\r\n    });\r\n    $(\"#navbarSupportedContent\").on(\"click\",\"li\",function(e){\r\n      $('#navbarSupportedContent ul li').removeClass(\"active\");\r\n      $(this).addClass('active');\r\n      var activeWidthNewAnimHeight = $(this).innerHeight();\r\n      var activeWidthNewAnimWidth = $(this).innerWidth();\r\n      var itemPosNewAnimTop = $(this).position();\r\n      var itemPosNewAnimLeft = $(this).position();\r\n      $(\".hori-selector\").css({\r\n        \"top\":itemPosNewAnimTop.top + \"px\", \r\n        \"left\":itemPosNewAnimLeft.left + \"px\",\r\n        \"height\": activeWidthNewAnimHeight + \"px\",\r\n        \"width\": activeWidthNewAnimWidth + \"px\"\r\n      });\r\n    });\r\n  }\r\n  function displayBlock(){\r\n    let dropdownItems = document.getElementById('dropdown-items')\r\n    dropdownItems.style.display = \"block\"\r\n  }\r\n  function displayNone(){\r\n    let dropdownItems = document.getElementById('dropdown-items')\r\n    dropdownItems.style.display = \"none\"\r\n  }\r\n  useEffect(() => {\r\n    \r\n    animation();\r\n    $(window).on('resize', function(){\r\n      setTimeout(function(){ animation(); }, 500);\r\n    });\r\n    \r\n  }, []);\r\n\r\n  return (\r\n  <nav className=\"navbar navbar-expand-lg navbar-mainbg\">\r\n    \r\n      <NavLink className=\"navbar-brand navbar-logo\" to=\"/\" exact>\r\n        EXAM GENERATOR\r\n      </NavLink>\r\n    \r\n    \r\n      <button \r\n        className=\"navbar-toggler\"\r\n        onClick={ function(){\r\n          setTimeout(function(){ animation(); });\r\n        }}\r\n        type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <i className=\"fas fa-bars text-white\"></i>\r\n      </button>\r\n \r\n      <div \r\n        className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n            \r\n            <div className=\"hori-selector\">\r\n              <div className=\"left\"></div>\r\n              <div className=\"right\"></div>\r\n            </div>\r\n            \r\n            <li className=\"nav-item active\">\r\n              <NavLink className=\"nav-link\" to=\"/\" exact>\r\n                Range\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/HandSignal\" exact>\r\n                Hand Signals\r\n              </NavLink> \r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/ConvertWeights\" exact>\r\n              Convert Weights\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/PartOfLine\" exact>\r\n                Part Of Line\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/Rcl\" exact>\r\n              Total weight\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item d-block d-lg-none\">\r\n              <NavLink className=\"nav-link\" to=\"/MaximumRadius\" exact>\r\n              Maximum radius\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item d-block d-lg-none\">\r\n              <NavLink className=\"nav-link\" to=\"/GrossCapacity\" exact>\r\n              Gross capacity\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item d-block d-lg-none\">\r\n              <NavLink className=\"nav-link\" to=\"/BoomAngle\" exact>\r\n              Boom angle high &amp; low\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item d-block d-lg-none\">\r\n              <NavLink className=\"nav-link\" to=\"/LoadedBoomAngle\" exact>\r\n              Loaded boom angle\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item d-block d-lg-none\">\r\n              <NavLink className=\"nav-link\" to=\"/MaximumBoomLength\" exact>\r\n              Maximum boom length\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item d-none d-lg-block dropdown\">\r\n              <div className='dropdown-icon' id='dropdown-icon' onMouseOver={displayBlock} >▼</div>\r\n              \r\n            </li>\r\n        </ul>\r\n      </div>\r\n      <div className='dropdown-items' id=\"dropdown-items\" onMouseLeave={displayNone}>\r\n        <a className=\"dropdown-item\" href=\"/MaximumRadius\">Maximum radius</a>\r\n        <a className=\"dropdown-item\" href=\"/GrossCapacity\">Gross capacity</a>\r\n        <a className=\"dropdown-item\" href=\"/BoomAngle\">Boom angle high &amp; low</a>\r\n        <a className=\"dropdown-item\" href=\"/LoadedBoomAngle\">Loaded boom angle</a>\r\n        <a className=\"dropdown-item\" href=\"/MaximumBoomLength\">Maximum boom length</a>\r\n      </div>\r\n  </nav>\r\n  )\r\n}\r\nexport default Navbar;","import React from 'react'\r\nimport ExamPage from '../../Components/ExamPage'\r\nconst Rcl = () => {\r\n  return (\r\n    <ExamPage name=\"Boom angle high and low\"/>\r\n  )\r\n}\r\nexport default Rcl;","import React from 'react'\r\nimport ExamPage from '../../Components/ExamPage'\r\nconst Rcl = () => {\r\n  return (\r\n    <ExamPage name=\"Gross capacity\"/>\r\n  )\r\n}\r\nexport default Rcl;","import React from 'react'\r\nimport ExamPage from '../../Components/ExamPage'\r\nconst Rcl = () => {\r\n  return (\r\n    <ExamPage name=\"Loaded boom angle\"/>\r\n  )\r\n}\r\nexport default Rcl;","import React from 'react'\r\nimport ExamPage from '../../Components/ExamPage'\r\nconst Rcl = () => {\r\n  return (\r\n    <ExamPage name=\"Maximum Boom Length\"/>\r\n  )\r\n}\r\nexport default Rcl;","import React from 'react'\r\nimport ExamPage from '../../Components/ExamPage'\r\nconst Rcl = () => {\r\n  return (\r\n    <ExamPage name=\"Maximum radius\"/>\r\n  )\r\n}\r\nexport default Rcl;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\nimport HandSignal from './pages/HandSignal/HandSignal';\nimport Rcl from './pages/Rcl/Rcl';\nimport Range from './pages/Range/Range';\nimport ConvertWeights from './pages/ConvertWeights/ConvertWeights';\nimport PartOfLine from './pages/PartOfLine/PartOfLine';\nimport Navbar from './Components/Navbar/Navbar';\nimport BoomAngle from './pages/BoomAngle/BoomAngle'\nimport GrossCapacity from './pages/GrossCapacity/GrossCapacity'\nimport LoadedBoomAngle from './pages/LoadedBoomAngle/LoadedBoomAngle'\nimport MaximumBoomLength from './pages/MaximumBoomLength/MaximumBoomLength'\nimport MaximumRadius from './pages/MaximumRadius/MaximumRadius'\n\nconst App = () => {\n  return (\n   <Router>\n    <Navbar/>\n    <main>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Range/>\n        </Route>\n        <Route path=\"/HandSignal\" exact>\n          <HandSignal/>\n        </Route>\n        <Route path=\"/ConvertWeights\" exact>\n          <ConvertWeights/>\n        </Route>\n        <Route path=\"/PartOfLine\" exact>\n          <PartOfLine/>\n        </Route>\n        <Route path=\"/Rcl\" exact>\n          <Rcl/>\n        </Route>\n        <Route path=\"/BoomAngle\" exact>\n          <BoomAngle/>\n        </Route>\n        <Route path=\"/GrossCapacity\" exact>\n          <GrossCapacity/>\n        </Route>\n        <Route path=\"/LoadedBoomAngle\" exact>\n          <LoadedBoomAngle/>\n        </Route>\n        <Route path=\"/MaximumBoomLength\" exact>\n          <MaximumBoomLength/>\n        </Route>\n        <Route path=\"/MaximumRadius\" exact>\n          <MaximumRadius/>\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    </main>\n   </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}